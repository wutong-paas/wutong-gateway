# TCP services
{{ range $tcpServer := .TCPBackends }}
server {
    preread_by_lua_block {
        ngx.var.proxy_upstream_name="{{ $tcpServer.UpstreamName }}";
    }

    {{ if .Listen }}listen {{.Listen}} {{ if $tcpServer.ProxyProtocol.Decode }} proxy_protocol{{ end }};{{ end }}
    proxy_timeout           {{ $tcpServer.ProxyStreamTimeout }};
    proxy_pass              upstream_balancer;
    proxy_next_upstream         {{ if $tcpServer.ProxyStreamNextUpstream }}on{{ else }}off{{ end }};
    proxy_next_upstream_timeout {{ $tcpServer.ProxyStreamNextUpstreamTimeout }};
    proxy_next_upstream_tries   {{ $tcpServer.ProxyStreamNextUpstreamTries }};
    {{ if $tcpServer.ProxyProtocol.Encode }}
    proxy_protocol          on;
    {{ end }}
}
{{ end }}

# UDP services
{{ range $udpServer := .UDPBackends }}
server {
    preread_by_lua_block {
        ngx.var.proxy_upstream_name="{{ $udpServer.UpstreamName }}";
    }
    {{ if $udpServer.Listen }}listen {{$udpServer.Listen}} {{ if $udpServer.ProxyProtocol.Decode }} proxy_protocol{{ end }};{{ end }}
    {{ if $udpServer.ProxyStreamResponses }}proxy_responses {{ $udpServer.ProxyStreamResponses }}; {{ end }}
    proxy_timeout           {{ $udpServer.ProxyStreamTimeout }};
    proxy_next_upstream         {{ if $udpServer.ProxyStreamNextUpstream }}on{{ else }}off{{ end }};
    proxy_next_upstream_timeout {{ $udpServer.ProxyStreamNextUpstreamTimeout }};
    proxy_next_upstream_tries   {{ $udpServer.ProxyStreamNextUpstreamTries }};
    proxy_pass              upstream_balancer;
}
{{ end }}